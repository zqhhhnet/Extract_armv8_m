    {
      Result
    #Equals
      <T>
        <k>
          .
        </k>
        <state>
          max |-> varvarVar'Ques'I0
          x |-> varvarVar'Ques'I0
          y |-> varvarVar'Ques'I1
          z |-> varvarVar'Ques'I2
        </state>
      </T>
    }
  #And
    {
      false
    #Equals
      varvarVar'Ques'I0 <=Int varvarVar'Ques'I1
    }
  #And
    {
      false
    #Equals
      varvarVar'Ques'I0 <=Int varvarVar'Ques'I2
    }
#Or
    {
      Result
    #Equals
      <T>
        <k>
          .
        </k>
        <state>
          max |-> varvarVar'Ques'I1
          x |-> varvarVar'Ques'I0
          y |-> varvarVar'Ques'I1
          z |-> varvarVar'Ques'I2
        </state>
      </T>
    }
  #And
    {
      false
    #Equals
      varvarVar'Ques'I1 <=Int varvarVar'Ques'I2
    }
  #And
    {
      true
    #Equals
      varvarVar'Ques'I0 <=Int varvarVar'Ques'I1
    }
#Or
    {
      Result
    #Equals
      <T>
        <k>
          .
        </k>
        <state>
          max |-> varvarVar'Ques'I2
          x |-> varvarVar'Ques'I0
          y |-> varvarVar'Ques'I1
          z |-> varvarVar'Ques'I2
        </state>
      </T>
    }
  #And
    {
      false
    #Equals
      varvarVar'Ques'I0 <=Int varvarVar'Ques'I1
    }
  #And
    {
      true
    #Equals
      varvarVar'Ques'I0 <=Int varvarVar'Ques'I2
    }
#Or
    {
      Result
    #Equals
      <T>
        <k>
          .
        </k>
        <state>
          max |-> varvarVar'Ques'I2
          x |-> varvarVar'Ques'I0
          y |-> varvarVar'Ques'I1
          z |-> varvarVar'Ques'I2
        </state>
      </T>
    }
  #And
    {
      true
    #Equals
      varvarVar'Ques'I0 <=Int varvarVar'Ques'I1
    }
  #And
    {
      true
    #Equals
      varvarVar'Ques'I1 <=Int varvarVar'Ques'I2
    }
