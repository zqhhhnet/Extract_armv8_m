#!/bin/bash
modopt="$1"
main="$2"
lto="$3"
shift; shift; shift
llc_flags="-O0"
for arg in "$@"; do
  case "$arg" in
    -O[0-3])
      llc_flags="$arg"
      ;;
    -O.)
      echo "$0: invalid optimization level"
      exit 1
      ;;
    *)
      ;;
  esac
done
LIBDIR="$(dirname "$0")"/../lib/kllvm/
if [ "$main" = "main" ]; then
  MAINFILES="$LIBDIR"/llvm/main/main.ll
else
  MAINFILES=""
fi

if [[ "$OSTYPE" == "darwin"* ]]; then
  flags="-lncurses -L/usr/local/opt/libffi/lib"
else
  flags=-ltinfo
fi

lang="-x ir"
if [ "$lto" = "lto" ]; then
  flags="$flags -flto -Wl,-mllvm,-tailcallopt"
  files=("$LIBDIR"/llvm/*.ll)
else
  files=()
  modasm="$(mktemp tmp.XXXXXXXXXX)"
  trap "rm -f $modasm" INT TERM EXIT
  @LLC@ -tailcallopt "$modopt" -mtriple=@BACKEND_TARGET_TRIPLE@ -filetype=obj $llc_flags -o "$modasm"
  modopt="$modasm"
  lang="-x none"
  for file in "$LIBDIR"/llvm/*.ll; do
    tmp="$(mktemp tmp.XXXXXXXXXX)"
    @LLC@ -tailcallopt "$file" -mtriple=@BACKEND_TARGET_TRIPLE@ -filetype=obj $llc_flags -o "$tmp"
    files+=("$tmp")
  done
fi

@CMAKE_CXX_COMPILER@ -Wno-override-module -Wno-return-type-c-linkage $lang "$modopt" "${files[@]}" -x none \
  "$LIBDIR"/libarithmetic.a \
  "$MAINFILES" \
  "$LIBDIR"/libconfigurationparser.a \
  "$LIBDIR"/libstrings.a \
  "$LIBDIR"/libio.a \
  "$LIBDIR"/libcollections.a \
  "$LIBDIR"/libParser.a \
  "$LIBDIR"/libAST.a \
  "$LIBDIR"/liballoc.a \
  "$LIBDIR"/libcollect.a \
  "$LIBDIR"/libmeta.a \
  -lgmp -lmpfr -lpthread -ldl -lffi \
  $flags \
  -ljemalloc \
  -I "$(dirname "$0")"/../include \
  "$@"
